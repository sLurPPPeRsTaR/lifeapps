{"version":3,"file":"fireEvent.js","names":["isTextInput","element","filterNodeByType","TextInput","isTouchResponder","isHostElement","props","onStartShouldSetResponder","isPointerEventEnabled","isParent","parentCondition","pointerEvents","parent","isTouchEvent","eventName","isEventEnabled","touchResponder","editable","touchStart","touchMove","onMoveShouldSetResponder","undefined","findEventHandler","callsite","nearestTouchResponder","handler","getEventHandler","eventHandlerName","toEventHandlerName","invokeEvent","data","returnValue","act","charAt","toUpperCase","slice","pressHandler","changeTextHandler","scrollHandler","fireEvent","press","changeText","scroll"],"sources":["../src/fireEvent.ts"],"sourcesContent":["import { ReactTestInstance } from 'react-test-renderer';\nimport { TextInput } from 'react-native';\nimport act from './act';\nimport { isHostElement } from './helpers/component-tree';\nimport { filterNodeByType } from './helpers/filterNodeByType';\n\ntype EventHandler = (...args: any) => unknown;\n\nconst isTextInput = (element?: ReactTestInstance) => {\n  if (!element) {\n    return false;\n  }\n\n  // We have to test if the element type is either the TextInput component\n  // (which would if it is a composite component) or the string\n  // TextInput (which would be true if it is a host component)\n  // All queries but the one by testID return composite component and event\n  // if all queries returned host components, since fireEvent bubbles up\n  // it would trigger the parent prop without the composite component check\n  return (\n    filterNodeByType(element, TextInput) ||\n    filterNodeByType(element, 'TextInput')\n  );\n};\n\nconst isTouchResponder = (element?: ReactTestInstance) => {\n  if (!isHostElement(element)) return false;\n\n  return !!element?.props.onStartShouldSetResponder || isTextInput(element);\n};\n\nconst isPointerEventEnabled = (\n  element?: ReactTestInstance,\n  isParent?: boolean\n): boolean => {\n  const parentCondition = isParent\n    ? element?.props.pointerEvents === 'box-only'\n    : element?.props.pointerEvents === 'box-none';\n\n  if (element?.props.pointerEvents === 'none' || parentCondition) {\n    return false;\n  }\n\n  if (!element?.parent) return true;\n\n  return isPointerEventEnabled(element.parent, true);\n};\n\nconst isTouchEvent = (eventName?: string) => {\n  return eventName === 'press';\n};\n\nconst isEventEnabled = (\n  element?: ReactTestInstance,\n  touchResponder?: ReactTestInstance,\n  eventName?: string\n) => {\n  if (isTextInput(element)) return element?.props.editable !== false;\n  if (!isPointerEventEnabled(element) && isTouchEvent(eventName)) return false;\n\n  const touchStart = touchResponder?.props.onStartShouldSetResponder?.();\n  const touchMove = touchResponder?.props.onMoveShouldSetResponder?.();\n\n  if (touchStart || touchMove) return true;\n\n  return touchStart === undefined && touchMove === undefined;\n};\n\nconst findEventHandler = (\n  element: ReactTestInstance,\n  eventName: string,\n  callsite?: any,\n  nearestTouchResponder?: ReactTestInstance\n): EventHandler | null => {\n  const touchResponder = isTouchResponder(element)\n    ? element\n    : nearestTouchResponder;\n\n  const handler = getEventHandler(element, eventName);\n  if (handler && isEventEnabled(element, touchResponder, eventName))\n    return handler;\n\n  if (element.parent === null || element.parent.parent === null) {\n    return null;\n  }\n\n  return findEventHandler(element.parent, eventName, callsite, touchResponder);\n};\n\nconst getEventHandler = (\n  element: ReactTestInstance,\n  eventName: string\n): EventHandler | undefined => {\n  const eventHandlerName = toEventHandlerName(eventName);\n  if (typeof element.props[eventHandlerName] === 'function') {\n    return element.props[eventHandlerName];\n  }\n\n  if (typeof element.props[eventName] === 'function') {\n    return element.props[eventName];\n  }\n\n  return undefined;\n};\n\nconst invokeEvent = (\n  element: ReactTestInstance,\n  eventName: string,\n  callsite?: any,\n  ...data: Array<any>\n) => {\n  const handler = findEventHandler(element, eventName, callsite);\n\n  if (!handler) {\n    return;\n  }\n\n  let returnValue;\n\n  act(() => {\n    returnValue = handler(...data);\n  });\n\n  return returnValue;\n};\n\nconst toEventHandlerName = (eventName: string) =>\n  `on${eventName.charAt(0).toUpperCase()}${eventName.slice(1)}`;\n\nconst pressHandler = (element: ReactTestInstance, ...data: Array<any>): void =>\n  invokeEvent(element, 'press', pressHandler, ...data);\nconst changeTextHandler = (\n  element: ReactTestInstance,\n  ...data: Array<any>\n): void => invokeEvent(element, 'changeText', changeTextHandler, ...data);\nconst scrollHandler = (element: ReactTestInstance, ...data: Array<any>): void =>\n  invokeEvent(element, 'scroll', scrollHandler, ...data);\n\nconst fireEvent = (\n  element: ReactTestInstance,\n  eventName: string,\n  ...data: Array<any>\n): void => invokeEvent(element, eventName, fireEvent, ...data);\n\nfireEvent.press = pressHandler;\nfireEvent.changeText = changeTextHandler;\nfireEvent.scroll = scrollHandler;\n\nexport default fireEvent;\n"],"mappings":"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"}