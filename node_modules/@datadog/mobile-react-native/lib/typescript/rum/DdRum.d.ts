import type { GestureResponderEvent } from 'react-native';
import type { ActionEventMapper } from './eventMappers/actionEventMapper';
import type { ErrorEventMapper } from './eventMappers/errorEventMapper';
import type { ResourceEventMapper } from './eventMappers/resourceEventMapper';
import type { DdRumType, RumActionType, ResourceKind, ErrorSource } from './types';
declare class DdRumWrapper implements DdRumType {
    private nativeRum;
    private lastActionData?;
    private errorEventMapper;
    private resourceEventMapper;
    private actionEventMapper;
    startView(key: string, name: string, context?: object, timestampMs?: number): Promise<void>;
    stopView(key: string, context?: object, timestampMs?: number): Promise<void>;
    startAction(type: RumActionType, name: string, context?: object, timestampMs?: number): Promise<void>;
    stopAction(...args: [
        type: RumActionType,
        name: string,
        context?: object,
        timestampMs?: number
    ] | [context?: object, timestampMs?: number]): Promise<void>;
    private callNativeStopAction;
    private getStopActionNativeCallArgs;
    addAction(type: RumActionType, name: string, context?: object, timestampMs?: number, actionContext?: GestureResponderEvent): Promise<void>;
    startResource(key: string, method: string, url: string, context?: object, timestampMs?: number): Promise<void>;
    stopResource(key: string, statusCode: number, kind: ResourceKind, size?: number, context?: object, timestampMs?: number, resourceContext?: XMLHttpRequest): Promise<void>;
    addError(message: string, source: ErrorSource, stacktrace: string, context?: object, timestampMs?: number): Promise<void>;
    addTiming(name: string): Promise<void>;
    registerErrorEventMapper(errorEventMapper: ErrorEventMapper): void;
    unregisterErrorEventMapper(): void;
    registerResourceEventMapper(resourceEventMapper: ResourceEventMapper): void;
    unregisterResourceEventMapper(): void;
    registerActionEventMapper(actionEventMapper: ActionEventMapper): void;
    unregisterActionEventMapper(): void;
}
export declare const DdRum: DdRumWrapper;
export {};
