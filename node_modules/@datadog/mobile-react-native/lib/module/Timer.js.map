{"version":3,"sources":["Timer.ts"],"names":["TimeProvider","START_LABEL","STOP_LABEL","Timer","constructor","timeProvider","startTime","times","unix","stopTime","durationBetween","start","recordTick","stop","label","getTimestamp","hasTickFor","startLabel","endLabel","checkLabelExists","startTick","endTick","durationBetweenTicks","timeAt","reset","end","react_native","Error"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAGA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,WAAW,GAAG,SAApB;AACA,MAAMC,UAAU,GAAG,QAAnB;AAEA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,KAAN,CAAY;AAIvBC,EAAAA,WAAW,CAACC,YAA0B,GAAG,IAAIL,YAAJ,EAA9B,EAAkD;AAAA;;AAAA,mCAFlB,EAEkB;;AACzD,SAAKK,YAAL,GAAoBA,YAApB;AACH;;AAEY,MAATC,SAAS,GAAW;AACpB,WAAO,KAAKC,KAAL,CAAWN,WAAX,EAAwBO,IAA/B;AACH;;AAEW,MAARC,QAAQ,GAAW;AACnB,WAAO,KAAKH,SAAL,GAAiB,KAAKI,eAAL,CAAqBT,WAArB,EAAkCC,UAAlC,CAAxB;AACH;;AAEDS,EAAAA,KAAK,GAAS;AACV,SAAKC,UAAL,CAAgBX,WAAhB;AACH;;AAEDY,EAAAA,IAAI,GAAS;AACT,SAAKD,UAAL,CAAgBV,UAAhB;AACH;;AAEDU,EAAAA,UAAU,CAACE,KAAD,EAAsB;AAC5B,SAAKP,KAAL,CAAWO,KAAX,IAAoB,KAAKT,YAAL,CAAkBU,YAAlB,EAApB;AACH;;AAEDC,EAAAA,UAAU,CAACF,KAAD,EAAyB;AAC/B,WAAOA,KAAK,IAAI,KAAKP,KAArB;AACH;;AAEDG,EAAAA,eAAe,CAACO,UAAD,EAAqBC,QAArB,EAA+C;AAC1D,SAAKC,gBAAL,CAAsBF,UAAtB;AACA,SAAKE,gBAAL,CAAsBD,QAAtB;AAEA,UAAME,SAAS,GAAG,KAAKb,KAAL,CAAWU,UAAX,CAAlB;AACA,UAAMI,OAAO,GAAG,KAAKd,KAAL,CAAWW,QAAX,CAAhB;AAEA,WAAO,KAAKI,oBAAL,CAA0BF,SAA1B,EAAqCC,OAArC,CAAP;AACH;;AAEDE,EAAAA,MAAM,CAACT,KAAD,EAAwB;AAC1B,SAAKK,gBAAL,CAAsBL,KAAtB;AAEA,WAAO,KAAKR,SAAL,GAAiB,KAAKI,eAAL,CAAqBT,WAArB,EAAkCa,KAAlC,CAAxB;AACH;;AAEDU,EAAAA,KAAK,GAAS;AACV,SAAKjB,KAAL,GAAa,EAAb;AACH;;AAEOe,EAAAA,oBAAoB,CAACX,KAAD,EAAmBc,GAAnB,EAA2C;AACnE,QAAId,KAAK,CAACe,YAAN,IAAsB,IAAtB,IAA8BD,GAAG,CAACC,YAAJ,IAAoB,IAAtD,EAA4D;AACxD,aAAOD,GAAG,CAACC,YAAJ,GAAmBf,KAAK,CAACe,YAAhC;AACH;;AACD,WAAOD,GAAG,CAACjB,IAAJ,GAAWG,KAAK,CAACH,IAAxB;AACH;;AAEOW,EAAAA,gBAAgB,CAACL,KAAD,EAAgB;AACpC,QAAI,CAAC,KAAKE,UAAL,CAAgBF,KAAhB,CAAL,EAA6B;AACzB,YAAM,IAAIa,KAAJ,CAAW,SAAQb,KAAM,oBAAzB,CAAN;AACH;AACJ;;AA/DsB","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport type { Timestamp } from './TimeProvider';\nimport { TimeProvider } from './TimeProvider';\n\nconst START_LABEL = '__start';\nconst STOP_LABEL = '__stop';\n\n/**\n * Simple timer which records time ticks. Shouldn't be re-used once stopped.\n * All timestamps/durations returned are in milliseconds.\n */\nexport default class Timer {\n    private timeProvider: TimeProvider;\n    private times: Record<string, Timestamp> = {};\n\n    constructor(timeProvider: TimeProvider = new TimeProvider()) {\n        this.timeProvider = timeProvider;\n    }\n\n    get startTime(): number {\n        return this.times[START_LABEL].unix;\n    }\n\n    get stopTime(): number {\n        return this.startTime + this.durationBetween(START_LABEL, STOP_LABEL);\n    }\n\n    start(): void {\n        this.recordTick(START_LABEL);\n    }\n\n    stop(): void {\n        this.recordTick(STOP_LABEL);\n    }\n\n    recordTick(label: string): void {\n        this.times[label] = this.timeProvider.getTimestamp();\n    }\n\n    hasTickFor(label: string): boolean {\n        return label in this.times;\n    }\n\n    durationBetween(startLabel: string, endLabel: string): number {\n        this.checkLabelExists(startLabel);\n        this.checkLabelExists(endLabel);\n\n        const startTick = this.times[startLabel];\n        const endTick = this.times[endLabel];\n\n        return this.durationBetweenTicks(startTick, endTick);\n    }\n\n    timeAt(label: string): number {\n        this.checkLabelExists(label);\n\n        return this.startTime + this.durationBetween(START_LABEL, label);\n    }\n\n    reset(): void {\n        this.times = {};\n    }\n\n    private durationBetweenTicks(start: Timestamp, end: Timestamp): number {\n        if (start.react_native != null && end.react_native != null) {\n            return end.react_native - start.react_native;\n        }\n        return end.unix - start.unix;\n    }\n\n    private checkLabelExists(label: string) {\n        if (!this.hasTickFor(label)) {\n            throw new Error(`Label ${label} is not registered`);\n        }\n    }\n}\n"]}