{"version":3,"sources":["InternalLog.tsx"],"names":["SdkVerbosity","InternalLog","log","message","verbosity","undefined","requiredLevel","levelMap","get","allowedLevel","prefixedMessage","ERROR","console","error","WARN","warn","INFO","info","DEBUG","debug","Map"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAN,CAAkB;AAUJ,SAAHC,GAAG,CAACC,OAAD,EAAkBC,SAAlB,EAAiD;AAC9D,QAAIH,WAAW,CAACG,SAAZ,KAA0BC,SAA9B,EAAyC;AACrC;AACH;;AACD,UAAMC,aAAa,GAAGL,WAAW,CAACM,QAAZ,CAAqBC,GAArB,CAAyBJ,SAAzB,CAAtB;AACA,UAAMK,YAAY,GAAGR,WAAW,CAACM,QAAZ,CAAqBC,GAArB,CAAyBP,WAAW,CAACG,SAArC,CAArB;;AACA,QAAIK,YAAY,KAAKJ,SAAjB,IAA8BC,aAAa,KAAKD,SAApD,EAA+D;AAC3D;AACH;;AACD,UAAMK,eAAe,GAAI,YAAWP,OAAQ,EAA5C;;AACA,QAAIC,SAAS,KAAKJ,YAAY,CAACW,KAA3B,IAAoCL,aAAa,IAAIG,YAAzD,EAAuE;AACnEG,MAAAA,OAAO,CAACC,KAAR,CAAcH,eAAd;AACH;;AAED,QAAIN,SAAS,KAAKJ,YAAY,CAACc,IAA3B,IAAmCR,aAAa,IAAIG,YAAxD,EAAsE;AAClEG,MAAAA,OAAO,CAACG,IAAR,CAAaL,eAAb;AACH;;AAED,QAAIN,SAAS,KAAKJ,YAAY,CAACgB,IAA3B,IAAmCV,aAAa,IAAIG,YAAxD,EAAsE;AAClEG,MAAAA,OAAO,CAACK,IAAR,CAAaP,eAAb;AACH;;AAED,QAAIN,SAAS,KAAKJ,YAAY,CAACkB,KAA3B,IAAoCZ,aAAa,IAAIG,YAAzD,EAAuE;AACnEG,MAAAA,OAAO,CAACO,KAAR,CAAcT,eAAd;AACH;AACJ;;AAnCoB;;gBAAZT,W,cACiB,IAAImB,GAAJ,CAA8B,CACpD,CAACpB,YAAY,CAACkB,KAAd,EAAqB,CAArB,CADoD,EAEpD,CAAClB,YAAY,CAACgB,IAAd,EAAoB,CAApB,CAFoD,EAGpD,CAAChB,YAAY,CAACc,IAAd,EAAoB,CAApB,CAHoD,EAIpD,CAACd,YAAY,CAACW,KAAd,EAAqB,CAArB,CAJoD,CAA9B,C;;gBADjBV,W,eAQ2CI,S","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport { SdkVerbosity } from './SdkVerbosity';\n\n/**\n * /!\\ DO NOT USE THIS IN YOUR APP /!\\\\\n *\n * This logger is only for debugging the Datadog SDK.\n */\nexport class InternalLog {\n    private static levelMap = new Map<SdkVerbosity, number>([\n        [SdkVerbosity.DEBUG, 1],\n        [SdkVerbosity.INFO, 2],\n        [SdkVerbosity.WARN, 3],\n        [SdkVerbosity.ERROR, 4]\n    ]);\n\n    public static verbosity: SdkVerbosity | undefined = undefined;\n\n    public static log(message: string, verbosity: SdkVerbosity): void {\n        if (InternalLog.verbosity === undefined) {\n            return;\n        }\n        const requiredLevel = InternalLog.levelMap.get(verbosity);\n        const allowedLevel = InternalLog.levelMap.get(InternalLog.verbosity);\n        if (allowedLevel === undefined || requiredLevel === undefined) {\n            return;\n        }\n        const prefixedMessage = `DATADOG: ${message}`;\n        if (verbosity === SdkVerbosity.ERROR && requiredLevel >= allowedLevel) {\n            console.error(prefixedMessage);\n        }\n\n        if (verbosity === SdkVerbosity.WARN && requiredLevel >= allowedLevel) {\n            console.warn(prefixedMessage);\n        }\n\n        if (verbosity === SdkVerbosity.INFO && requiredLevel >= allowedLevel) {\n            console.info(prefixedMessage);\n        }\n\n        if (verbosity === SdkVerbosity.DEBUG && requiredLevel >= allowedLevel) {\n            console.debug(prefixedMessage);\n        }\n    }\n}\n"]}