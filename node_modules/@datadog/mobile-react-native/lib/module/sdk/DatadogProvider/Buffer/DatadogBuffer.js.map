{"version":3,"sources":["DatadogBuffer.ts"],"names":["DatadogBuffer"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAeA,aAAf,CAA6B;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nexport abstract class DatadogBuffer {\n    /**\n     * Add a callback that takes no input and yields no output to the buffer.\n     */\n    abstract addCallback: (callback: () => Promise<void>) => Promise<void>;\n\n    /**\n     * Add a callback that returns an id to the buffer.\n     * This method also returns an id (possibly different), to be passed to addCallbackWithId.\n     */\n    abstract addCallbackReturningId: (\n        callback: () => Promise<string>\n    ) => Promise<string>;\n\n    /**\n     * Add a callback that takes an id as input to the buffer.\n     * This id must be obtained by calling addCallbackReturningId.\n     */\n    abstract addCallbackWithId: (\n        callback: (id: string) => Promise<void>,\n        id: string\n    ) => Promise<void>;\n\n    /**\n     * Execute all callbacks in the buffer.\n     */\n    abstract drain: () => void;\n}\n"]}