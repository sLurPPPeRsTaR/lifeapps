{"version":3,"sources":["BufferSingleton.ts"],"names":["BoundedBuffer","PassThroughBuffer","BufferSingleton","bufferInstance","drain"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,iBAA9B;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,eAAN,CAAsB;;gBAAhBA,e,oBACsC,IAAIF,aAAJ,E;;gBADtCE,e,iBAGY,MAAqB;AACtC,SAAOA,eAAe,CAACC,cAAvB;AACH,C;;gBALQD,e,sBAOiB,MAAM;AAC5BA,EAAAA,eAAe,CAACC,cAAhB,CAA+BC,KAA/B;AACAF,EAAAA,eAAe,CAACC,cAAhB,GAAiC,IAAIF,iBAAJ,EAAjC;AACH,C;;gBAVQC,e,WAYM,MAAM;AACjBA,EAAAA,eAAe,CAACC,cAAhB,GAAiC,IAAIH,aAAJ,EAAjC;AACH,C","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport { BoundedBuffer } from './BoundedBuffer';\nimport type { DatadogBuffer } from './DatadogBuffer';\nimport { PassThroughBuffer } from './PassThroughBuffer';\n\nexport class BufferSingleton {\n    private static bufferInstance: DatadogBuffer = new BoundedBuffer();\n\n    static getInstance = (): DatadogBuffer => {\n        return BufferSingleton.bufferInstance;\n    };\n\n    static onInitialization = () => {\n        BufferSingleton.bufferInstance.drain();\n        BufferSingleton.bufferInstance = new PassThroughBuffer();\n    };\n\n    static reset = () => {\n        BufferSingleton.bufferInstance = new BoundedBuffer();\n    };\n}\n"]}