{"version":3,"sources":["DdRumResourceTracking.tsx"],"names":["InternalLog","SdkVerbosity","firstPartyHostsRegexMapBuilder","ResourceReporter","filterDevResource","XHRProxy","DdRumResourceTracking","startTracking","tracingSamplingRate","firstPartyHosts","isTracking","log","WARN","requestProxy","xhrType","XMLHttpRequest","resourceReporter","onTrackingStart","firstPartyHostsRegexMap","INFO","stopTracking","onTrackingStop"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAGA,SAASC,8BAAT,QAA+C,0BAA/C;AAEA,SAASC,gBAAT,QAAiC,sDAAjC;AACA,SAASC,iBAAT,QAAkC,kEAAlC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAN,CAA4B;AAI/B;AACJ;AACA;AACwB,SAAbC,aAAa,CAAC;AACjBC,IAAAA,mBADiB;AAEjBC,IAAAA;AAFiB,GAAD,EAMX;AACL;AACA,QAAIH,qBAAqB,CAACI,UAA1B,EAAsC;AAClCV,MAAAA,WAAW,CAACW,GAAZ,CACI,+CADJ,EAEIV,YAAY,CAACW,IAFjB;AAIA;AACH;;AAED,SAAKC,YAAL,GAAoB,IAAIR,QAAJ,CAAa;AAC7BS,MAAAA,OAAO,EAAEC,cADoB;AAE7BC,MAAAA,gBAAgB,EAAE,IAAIb,gBAAJ,CAAqB,CAACC,iBAAD,CAArB;AAFW,KAAb,CAApB;AAIA,SAAKS,YAAL,CAAkBI,eAAlB,CAAkC;AAC9BT,MAAAA,mBAD8B;AAE9BU,MAAAA,uBAAuB,EAAEhB,8BAA8B,CACnDO,eADmD;AAFzB,KAAlC;AAOAT,IAAAA,WAAW,CAACW,GAAZ,CACI,uCADJ,EAEIV,YAAY,CAACkB,IAFjB;AAIAb,IAAAA,qBAAqB,CAACI,UAAtB,GAAmC,IAAnC;AACH;;AAEkB,SAAZU,YAAY,GAAS;AACxB,QAAId,qBAAqB,CAACI,UAA1B,EAAsC;AAClCJ,MAAAA,qBAAqB,CAACI,UAAtB,GAAmC,KAAnC;;AACA,UAAI,KAAKG,YAAT,EAAuB;AACnB,aAAKA,YAAL,CAAkBQ,cAAlB;AACH;;AACD,WAAKR,YAAL,GAAoB,IAApB;AACH;AACJ;;AAjD8B;;gBAAtBP,qB,gBACmB,K;;gBADnBA,qB","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport { InternalLog } from '../../../InternalLog';\nimport { SdkVerbosity } from '../../../SdkVerbosity';\nimport type { FirstPartyHost } from '../../types';\n\nimport { firstPartyHostsRegexMapBuilder } from './domain/firstPartyHosts';\nimport type { RequestProxy } from './domain/interfaces/RequestProxy';\nimport { ResourceReporter } from './implementation/DatadogRumResource/ResourceReporter';\nimport { filterDevResource } from './implementation/DatadogRumResource/internalDevResourceBlocklist';\nimport { XHRProxy } from './implementation/XHRProxy';\n\n/**\n * Provides RUM auto-instrumentation feature to track resources (fetch, XHR, axios) as RUM events.\n */\nexport class DdRumResourceTracking {\n    private static isTracking = false;\n    private static requestProxy: RequestProxy | null;\n\n    /**\n     * Starts tracking resources and sends a RUM Resource event every time a network request is detected.\n     */\n    static startTracking({\n        tracingSamplingRate,\n        firstPartyHosts\n    }: {\n        tracingSamplingRate: number;\n        firstPartyHosts: FirstPartyHost[];\n    }): void {\n        // extra safety to avoid proxying the XHR class twice\n        if (DdRumResourceTracking.isTracking) {\n            InternalLog.log(\n                'Datadog SDK is already tracking XHR resources',\n                SdkVerbosity.WARN\n            );\n            return;\n        }\n\n        this.requestProxy = new XHRProxy({\n            xhrType: XMLHttpRequest,\n            resourceReporter: new ResourceReporter([filterDevResource])\n        });\n        this.requestProxy.onTrackingStart({\n            tracingSamplingRate,\n            firstPartyHostsRegexMap: firstPartyHostsRegexMapBuilder(\n                firstPartyHosts\n            )\n        });\n\n        InternalLog.log(\n            'Datadog SDK is tracking XHR resources',\n            SdkVerbosity.INFO\n        );\n        DdRumResourceTracking.isTracking = true;\n    }\n\n    static stopTracking(): void {\n        if (DdRumResourceTracking.isTracking) {\n            DdRumResourceTracking.isTracking = false;\n            if (this.requestProxy) {\n                this.requestProxy.onTrackingStop();\n            }\n            this.requestProxy = null;\n        }\n    }\n}\n"]}