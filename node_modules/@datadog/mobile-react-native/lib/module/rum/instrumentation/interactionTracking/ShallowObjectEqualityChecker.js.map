{"version":3,"sources":["ShallowObjectEqualityChecker.ts"],"names":["areObjectShallowEqual","objectA","objectB","keys","Object","length","key"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAMA,qBAAqB,GAAG,CACjCC,OADiC,EAEjCC,OAFiC,KAGvB;AACV,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,OAAZ,CAAb;;AACA,MAAIE,IAAI,CAACE,MAAL,KAAgBD,MAAM,CAACD,IAAP,CAAYD,OAAZ,EAAqBG,MAAzC,EAAiD;AAC7C,WAAO,KAAP;AACH;;AACD,OAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACpB,QAAIF,OAAO,CAACK,GAAD,CAAP,KAAiBJ,OAAO,CAACI,GAAD,CAA5B,EAAmC;AAC/B,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CAdM","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\n/**\n * Does a shallow comparison between 2 objects\n */\nexport const areObjectShallowEqual = (\n    objectA: Record<string, unknown>,\n    objectB: Record<string, unknown>\n): boolean => {\n    const keys = Object.keys(objectA);\n    if (keys.length !== Object.keys(objectB).length) {\n        return false;\n    }\n    for (const key of keys) {\n        if (objectA[key] !== objectB[key]) {\n            return false;\n        }\n    }\n    return true;\n};\n"]}