"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DdRumResourceTracking = void 0;

var _InternalLog = require("../../../InternalLog");

var _SdkVerbosity = require("../../../SdkVerbosity");

var _firstPartyHosts = require("./domain/firstPartyHosts");

var _ResourceReporter = require("./implementation/DatadogRumResource/ResourceReporter");

var _internalDevResourceBlocklist = require("./implementation/DatadogRumResource/internalDevResourceBlocklist");

var _XHRProxy = require("./implementation/XHRProxy");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Provides RUM auto-instrumentation feature to track resources (fetch, XHR, axios) as RUM events.
 */
class DdRumResourceTracking {
  /**
   * Starts tracking resources and sends a RUM Resource event every time a network request is detected.
   */
  static startTracking({
    tracingSamplingRate,
    firstPartyHosts
  }) {
    // extra safety to avoid proxying the XHR class twice
    if (DdRumResourceTracking.isTracking) {
      _InternalLog.InternalLog.log('Datadog SDK is already tracking XHR resources', _SdkVerbosity.SdkVerbosity.WARN);

      return;
    }

    this.requestProxy = new _XHRProxy.XHRProxy({
      xhrType: XMLHttpRequest,
      resourceReporter: new _ResourceReporter.ResourceReporter([_internalDevResourceBlocklist.filterDevResource])
    });
    this.requestProxy.onTrackingStart({
      tracingSamplingRate,
      firstPartyHostsRegexMap: (0, _firstPartyHosts.firstPartyHostsRegexMapBuilder)(firstPartyHosts)
    });

    _InternalLog.InternalLog.log('Datadog SDK is tracking XHR resources', _SdkVerbosity.SdkVerbosity.INFO);

    DdRumResourceTracking.isTracking = true;
  }

  static stopTracking() {
    if (DdRumResourceTracking.isTracking) {
      DdRumResourceTracking.isTracking = false;

      if (this.requestProxy) {
        this.requestProxy.onTrackingStop();
      }

      this.requestProxy = null;
    }
  }

}

exports.DdRumResourceTracking = DdRumResourceTracking;

_defineProperty(DdRumResourceTracking, "isTracking", false);

_defineProperty(DdRumResourceTracking, "requestProxy", void 0);
//# sourceMappingURL=DdRumResourceTracking.js.map