{"version":3,"sources":["DdRumUserInteractionTracking.tsx"],"names":["DdRumUserInteractionTracking","startTracking","isTracking","InternalLog","log","SdkVerbosity","WARN","eventsInterceptor","DdEventsInterceptor","original","React","createElement","args","patchCreateElementFunction","jsxRuntime","originaljsx","jsx","originalJsx","e","DdSdk","telemetryDebug","originalMemo","memo","component","propsAreEqual","prev","next","onPress","_prevOnPress","partialPrevProps","prevProps","__DATADOG_INTERNAL_ORIGINAL_ON_PRESS__","_nextOnPress","partialNextProps","nextProps","INFO","stopTracking","originalCreateElement","NoOpEventsInterceptor","originalFunction","element","props","rest","originalOnPress","interceptOnPress"],"mappings":"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","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport React from 'react';\n\nimport { InternalLog } from '../../../InternalLog';\nimport { SdkVerbosity } from '../../../SdkVerbosity';\nimport { getErrorMessage } from '../../../errorUtils';\nimport { DdSdk } from '../../../foundation';\n\nimport { DdEventsInterceptor } from './DdEventsInterceptor';\nimport type EventsInterceptor from './EventsInterceptor';\nimport NoOpEventsInterceptor from './NoOpEventsInterceptor';\nimport { areObjectShallowEqual } from './ShallowObjectEqualityChecker';\nimport { getJsxRuntime } from './getJsxRuntime';\n\n/**\n * Provides RUM auto-instrumentation feature to track user interaction as RUM events.\n * For now we are only covering the \"onPress\" events.\n */\nexport class DdRumUserInteractionTracking {\n    private static isTracking = false;\n    private static eventsInterceptor: EventsInterceptor = new NoOpEventsInterceptor();\n    private static originalCreateElement = React.createElement;\n    private static originalMemo = React.memo;\n    private static originalJsx = null;\n\n    private static patchCreateElementFunction = (\n        originalFunction: typeof React.createElement,\n        [element, props, ...rest]: Parameters<typeof React.createElement>\n    ): ReturnType<typeof React.createElement> => {\n        if (\n            props &&\n            typeof (props as Record<string, unknown>).onPress === 'function'\n        ) {\n            const originalOnPress = (props as Record<string, unknown>) // eslint-disable-next-line @typescript-eslint/ban-types\n                .onPress as Function;\n            (props as Record<string, unknown>).onPress = (...args: any[]) => {\n                DdRumUserInteractionTracking.eventsInterceptor.interceptOnPress(\n                    ...args\n                );\n                return originalOnPress(...args);\n            };\n            // we store the original onPress prop so we can keep memoization working\n            (props as Record<\n                string,\n                unknown\n            >).__DATADOG_INTERNAL_ORIGINAL_ON_PRESS__ = originalOnPress;\n        }\n        return originalFunction(element, props, ...rest);\n    };\n\n    /**\n     * Starts tracking user interactions and sends a RUM Action event every time a new interaction was detected.\n     * Please note that we are only considering as valid - for - tracking only the user interactions that have\n     * a visible output (either an UI state change or a Resource request)\n     */\n    static startTracking(): void {\n        // extra safety to avoid wrapping more than 1 time this function\n        if (DdRumUserInteractionTracking.isTracking) {\n            InternalLog.log(\n                'Datadog SDK is already tracking interactions',\n                SdkVerbosity.WARN\n            );\n            return;\n        }\n        DdRumUserInteractionTracking.eventsInterceptor = new DdEventsInterceptor();\n\n        const original = React.createElement;\n        React.createElement = (\n            ...args: Parameters<typeof React.createElement>\n        ): any => {\n            return this.patchCreateElementFunction(original, args);\n        };\n\n        try {\n            const jsxRuntime = getJsxRuntime();\n            const originaljsx = jsxRuntime.jsx;\n            this.originalJsx = originaljsx;\n            jsxRuntime.jsx = (\n                ...args: Parameters<typeof React.createElement>\n            ): ReturnType<typeof React.createElement> => {\n                return this.patchCreateElementFunction(originaljsx, args);\n            };\n        } catch (e) {\n            DdSdk.telemetryDebug(getErrorMessage(e));\n        }\n\n        const originalMemo = React.memo;\n\n        React.memo = (\n            component: any,\n            propsAreEqual?: (prevProps: any, newProps: any) => boolean\n        ) => {\n            return originalMemo(component, (prev, next) => {\n                if (!next.onPress || !prev.onPress) {\n                    return propsAreEqual\n                        ? propsAreEqual(prev, next)\n                        : areObjectShallowEqual(prev, next);\n                }\n                // we replace \"our\" onPress from the props by the original for comparison\n                const { onPress: _prevOnPress, ...partialPrevProps } = prev;\n                const prevProps = {\n                    ...partialPrevProps,\n                    onPress: prev.__DATADOG_INTERNAL_ORIGINAL_ON_PRESS__\n                };\n\n                const { onPress: _nextOnPress, ...partialNextProps } = next;\n                const nextProps = {\n                    ...partialNextProps,\n                    onPress: next.__DATADOG_INTERNAL_ORIGINAL_ON_PRESS__\n                };\n\n                // if no comparison function is provided we do shallow comparison\n                return propsAreEqual\n                    ? propsAreEqual(prevProps, nextProps)\n                    : areObjectShallowEqual(nextProps, prevProps);\n            });\n        };\n\n        DdRumUserInteractionTracking.isTracking = true;\n        InternalLog.log(\n            'Datadog SDK is tracking interactions',\n            SdkVerbosity.INFO\n        );\n    }\n\n    static stopTracking() {\n        React.createElement = this.originalCreateElement;\n        React.memo = this.originalMemo;\n        DdRumUserInteractionTracking.isTracking = false;\n        if (this.originalJsx) {\n            const jsxRuntime = getJsxRuntime();\n            jsxRuntime.jsx = this.originalJsx;\n            this.originalJsx = null;\n        }\n    }\n}\n"]}