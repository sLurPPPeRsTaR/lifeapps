{"version":3,"sources":["errorEventMapper.ts"],"names":["generateErrorEventMapper","eventMapper","EventMapper","formatRawErrorToErrorEvent","formatErrorEventToNativeError","formatRawErrorToNativeError","error","additionalInformation"],"mappings":";;;;;;;AAOA;;AAPA;AACA;AACA;AACA;AACA;AA0BO,MAAMA,wBAAwB,GACjCC,WADoC,IAGpC,IAAIC,wBAAJ,CACID,WADJ,EAEIE,0BAFJ,EAGIC,6BAHJ,EAIIC,2BAJJ,CAHG;;;;AAUP,MAAMF,0BAA0B,GAAG,CAC/BG,KAD+B,EAE/BC,qBAF+B,KAGlB;AACb,SAAO,EACH,GAAGD,KADA;AAEH,OAAGC;AAFA,GAAP;AAIH,CARD;;AAUA,MAAMF,2BAA2B,GAAIC,KAAD,IAAkC;AAClE,SAAOA,KAAP;AACH,CAFD;;AAIA,MAAMF,6BAA6B,GAAIE,KAAD,IAAoC;AACtE,SAAOA,KAAP;AACH,CAFD","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport type { AdditionalEventDataForMapper } from '../../sdk/EventMappers/EventMapper';\nimport { EventMapper } from '../../sdk/EventMappers/EventMapper';\nimport type { ErrorSource } from '../types';\n\ntype RawError = {\n    message: string;\n    source: ErrorSource;\n    stacktrace: string;\n    context?: object;\n    timestampMs?: number;\n};\n\ntype ErrorEvent = RawError & AdditionalEventDataForMapper;\n\ntype NativeError = {\n    message: string;\n    source: ErrorSource;\n    stacktrace: string;\n    context?: object;\n    timestampMs?: number;\n};\n\nexport type ErrorEventMapper = (event: ErrorEvent) => ErrorEvent | null;\n\nexport const generateErrorEventMapper = (\n    eventMapper: ErrorEventMapper | undefined\n) =>\n    new EventMapper(\n        eventMapper,\n        formatRawErrorToErrorEvent,\n        formatErrorEventToNativeError,\n        formatRawErrorToNativeError\n    );\n\nconst formatRawErrorToErrorEvent = (\n    error: RawError,\n    additionalInformation: AdditionalEventDataForMapper\n): ErrorEvent => {\n    return {\n        ...error,\n        ...additionalInformation\n    };\n};\n\nconst formatRawErrorToNativeError = (error: RawError): NativeError => {\n    return error;\n};\n\nconst formatErrorEventToNativeError = (error: ErrorEvent): NativeError => {\n    return error;\n};\n"]}