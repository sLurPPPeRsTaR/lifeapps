{"version":3,"sources":["UserInfoSingleton.ts"],"names":["UserInfoProvider","userInfo","UserInfoSingleton","userInfoProvider"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAIA,MAAMA,gBAAN,CAAuB;AAAA;AAAA,sCACU,EADV;;AAAA,yCAGJC,QAAD,IAAwB;AAClC,WAAKA,QAAL,GAAgBA,QAAhB;AACH,KALkB;;AAAA,yCAOL,MAAgB;AAC1B,aAAO,KAAKA,QAAZ;AACH,KATkB;AAAA;;AAAA;;AAYhB,MAAMC,iBAAN,CAAwB;;;;gBAAlBA,iB,sBACyB,IAAIF,gBAAJ,E;;gBADzBE,iB,iBAGY,MAAwB;AACzC,SAAOA,iBAAiB,CAACC,gBAAzB;AACH,C;;gBALQD,iB,WAOM,MAAM;AACjBA,EAAAA,iBAAiB,CAACC,gBAAlB,GAAqC,IAAIH,gBAAJ,EAArC;AACH,C","sourcesContent":["/*\n * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2016-Present Datadog, Inc.\n */\n\nimport type { UserInfo } from './types';\n\nclass UserInfoProvider {\n    private userInfo: UserInfo = {};\n\n    setUserInfo = (userInfo: UserInfo) => {\n        this.userInfo = userInfo;\n    };\n\n    getUserInfo = (): UserInfo => {\n        return this.userInfo;\n    };\n}\n\nexport class UserInfoSingleton {\n    private static userInfoProvider = new UserInfoProvider();\n\n    static getInstance = (): UserInfoProvider => {\n        return UserInfoSingleton.userInfoProvider;\n    };\n\n    static reset = () => {\n        UserInfoSingleton.userInfoProvider = new UserInfoProvider();\n    };\n}\n"]}