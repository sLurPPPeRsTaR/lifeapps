"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InternalLog = void 0;

var _SdkVerbosity = require("./SdkVerbosity");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * /!\ DO NOT USE THIS IN YOUR APP /!\\
 *
 * This logger is only for debugging the Datadog SDK.
 */
class InternalLog {
  static log(message, verbosity) {
    if (InternalLog.verbosity === undefined) {
      return;
    }

    const requiredLevel = InternalLog.levelMap.get(verbosity);
    const allowedLevel = InternalLog.levelMap.get(InternalLog.verbosity);

    if (allowedLevel === undefined || requiredLevel === undefined) {
      return;
    }

    const prefixedMessage = `DATADOG: ${message}`;

    if (verbosity === _SdkVerbosity.SdkVerbosity.ERROR && requiredLevel >= allowedLevel) {
      console.error(prefixedMessage);
    }

    if (verbosity === _SdkVerbosity.SdkVerbosity.WARN && requiredLevel >= allowedLevel) {
      console.warn(prefixedMessage);
    }

    if (verbosity === _SdkVerbosity.SdkVerbosity.INFO && requiredLevel >= allowedLevel) {
      console.info(prefixedMessage);
    }

    if (verbosity === _SdkVerbosity.SdkVerbosity.DEBUG && requiredLevel >= allowedLevel) {
      console.debug(prefixedMessage);
    }
  }

}

exports.InternalLog = InternalLog;

_defineProperty(InternalLog, "levelMap", new Map([[_SdkVerbosity.SdkVerbosity.DEBUG, 1], [_SdkVerbosity.SdkVerbosity.INFO, 2], [_SdkVerbosity.SdkVerbosity.WARN, 3], [_SdkVerbosity.SdkVerbosity.ERROR, 4]]));

_defineProperty(InternalLog, "verbosity", undefined);
//# sourceMappingURL=InternalLog.js.map