import type { UserInfo } from '../sdk/UserInfoSingleton/types';
/**
 * The entry point to use Datadog's Logs feature.
 */
export declare type DdLogsType = {
    /**
     * Send a log with level debug.
     * @param message: The message to send.
     * @param context: The additional context to send.
     */
    debug(message: string, context?: object): Promise<void>;
    /**
     * Send a log with level info.
     * @param message: The message to send.
     * @param context: The additional context to send.
     */
    info(message: string, context?: object): Promise<void>;
    /**
     * Send a log with level warn.
     * @param message: The message to send.
     * @param context: The additional context to send.
     */
    warn(message: string, context?: object): Promise<void>;
    /**
     * Send a log with level error.
     * @param message: The message to send.
     * @param context: The additional context to send.
     */
    error(message: string, context?: object): Promise<void>;
};
/**
 * Log input from developers
 */
export declare type RawLog = {
    message: string;
    context: object;
    status: LogStatus;
};
/**
 * Log input for native SDKs
 */
export declare type NativeLog = {
    message: string;
    context: object;
};
export declare type LogStatus = 'debug' | 'info' | 'warn' | 'error';
export declare type LogEvent = {
    message: string;
    context: object;
    readonly status: LogStatus;
    readonly userInfo: UserInfo;
    readonly attributes?: object;
};
export declare type LogEventMapper = (logEvent: LogEvent) => LogEvent | null;
