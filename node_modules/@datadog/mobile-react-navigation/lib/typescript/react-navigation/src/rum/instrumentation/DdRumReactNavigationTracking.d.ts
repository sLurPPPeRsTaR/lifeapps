import type { NavigationContainerRef, Route } from './react-navigation';
export declare type ViewNamePredicate = (route: Route<string, any | undefined>, trackedName: string) => string | null;
/**
 * Provides RUM integration for the [ReactNavigation](https://reactnavigation.org/) API.
 */
export declare class DdRumReactNavigationTracking {
    private static registeredContainer;
    private static navigationStateChangeListener;
    private static viewNamePredicate;
    private static backHandler;
    private static appStateSubscription?;
    static ROUTE_UNDEFINED_NAVIGATION_WARNING_MESSAGE: string;
    static NULL_NAVIGATION_REF_ERROR_MESSAGE: string;
    static NAVIGATION_REF_IN_USE_ERROR_MESSAGE: string;
    static isAppExitingOnBackPress: () => boolean;
    static onBackPress: () => boolean;
    /**
     * Starts tracking the NavigationContainer and sends a RUM View event every time the navigation route changed.
     * @param navigationRef the reference to the real NavigationContainer.
     */
    static startTrackingViews(navigationRef: NavigationContainerRef | null, viewNamePredicate?: ViewNamePredicate): void;
    /**
     * Stops tracking the NavigationContainer.
     * @param navigationRef the reference to the real NavigationContainer.
     */
    static stopTrackingViews(navigationRef: NavigationContainerRef | null): void;
    private static handleRouteNavigation;
    private static resolveNavigationStateChangeListener;
    private static appStateListener;
}
